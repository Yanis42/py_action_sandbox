name: Release (Linux/Windows)

on:
  push:
    branches:
      - main

jobs:
  createrelease:
    name: Create Release

    runs-on: [ubuntu-latest]

    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.${{ github.run_number }}
        release_name: Release v1.0.${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt

    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt

  build:
    name: Build packages

    needs: createrelease

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            TARGET: Linux
            CMD_BUILD: pyinstaller -F -w -n Sandy --add-data "res:res" src/main.py && cd dist/ && zip -r9 Sandy_Ubuntu Sandy
            OUT_FILE_NAME: Sandy_Ubuntu.zip
            ASSET_MIME: application/zip

          - os: windows-latest
            TARGET: Windows
            CMD_BUILD: PyInstaller -F -w -n Sandy_Windows --add-data "res;res" src/main.py
            OUT_FILE_NAME: Sandy_Windows.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: 3.10

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}

    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url

    - name: Get Release File Name & Upload URL
      id: get_release_info
      shell: bash
      run: |
        value=`cat release_url/release_url.txt`
        echo "upload_url=$value" >> $GITHUB_OUTPUT

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./dist/${{ matrix.OUT_FILE_NAME }}
        asset_name: ${{ matrix.OUT_FILE_NAME}}
        asset_content_type: ${{ matrix.ASSET_MIME }}
