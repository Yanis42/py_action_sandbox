name: Python Build (Linux/Windows)

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  build:
    name: Build packages
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
        build_name: PyActionSandbox
        build_args: -F -w --add-data "res;res" src/main.py

    steps:
    - uses: actions/checkout@v3
      with:
        branch: ${{ github.ref }}

    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: 3.10

    - name: Install Dependencies
      run: python -m pip install --upgrade pip && pip install -r requirements.txt

    - name: Build Project for ${{ matrix.os }}
      output_name: ${{ matrix.build_name }}_${{ env.TARGET }}

      - if: ${{ matrix.os == windows-latest }}
        env:
          CMD_EXEC: PyInstaller
          CMD_EXTRAS: ""
          TARGET: Windows

      - if: ${{ matrix.os == ubuntu-latest }}
        env:
          CMD_EXEC: pyinstaller
          CMD_EXTRAS: "&& cd dist/ && zip -r9 ${{ output_name }} ${{ output_name }}"
          TARGET: Linux

      - if: ${{ env.CMD_EXEC != "" }}
        run: ${{ env.CMD_EXEC }} ${{ matrix.build_args }} -n ${{ output_name }} ${{ env.CMD_EXTRAS }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v3

      - if: ${{ matrix.os == windows-latest }}
        env:
          FILE_TYPE: "exe"
          TARGET: Windows

      - if: ${{ matrix.os == ubuntu-latest }}
        env:
          FILE_TYPE: "zip"
          TARGET: Linux
      with:
        - if: ${{ env.FILE_TYPE != "" }}
          name: ${{ matrix.build_name }}_${{ env.TARGET }}
          path: ${{ matrix.build_name }}_${{ env.TARGET }}.${{ env.FILE_TYPE }}
